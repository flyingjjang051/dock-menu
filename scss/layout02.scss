@import "vars";
@import "mixin";

// sass list  (a.k.a js array)
$colors: (rgb(228, 121, 0), rgb(26, 224, 0), rgb(5, 147, 212), rgb(156, 6, 216), rgb(206, 24, 39), rgb(138, 51, 1));

html {
}
body {
  font-family: "Roboto", "Noto Sans KR", sans-serif;
  font-size: 16px;
  color: #111;
  // prettier-ignore
  background-image: repeating-linear-gradient(90deg, rgba(255, 255, 255, 0.05), 
                                                     rgba(255, 255, 255, 0.05) 1px, 
                                                       0, transparent 50px);
  background-color: #333;
}
a {
  color: inherit;
  text-decoration: none;
}

#header {
  height: 60px;
  background-color: #fff;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1);
  overflow: hidden;
  position: fixed;
  z-index: 2;
  h1 {
    font-weight: 300;
    font-size: 18px;
    @include longShadow(#ccc, 50);
    text-transform: uppercase;
    strong {
      font-weight: 700;
    }
  }
}
$cube-width: 1400px;
$cube-height: 700px;
#main {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
  .scene {
    width: $cube-width;
    height: $cube-height;
    perspective: 700px;
    // transform-style: preserve-3d;
    // transform: rotateX(-15deg);
    .list {
      position: relative;
      width: 100%;
      height: 100%;
      transform-style: preserve-3d;
      transform: translateZ(2154px) rotateY(0deg);
      > li {
        position: absolute;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 128px;
        text-transform: uppercase;
        color: rgba(#fff, 0.5);
        font-weight: 100;
        overflow: hidden;
        user-select: none;
        box-sizing: border-box;
        $total: 10;
        @for $i from 1 through $total {
          &:nth-child(#{$i}) {
            background-color: rgba(nth($colors, $i % length($colors) + 1), 0.5);
            transform: rotateY(-360deg / $total * ($i - 1)) rotateX(0deg) translateZ(-2174px);
            box-shadow: inset 0 0 15px 5px rgba(0, 0, 0, 0.1);
          }
        }
      }
    }
  }
}

.btns {
  position: absolute;
  bottom: 30px;
  width: 100%;
  display: flex;
  justify-content: center;
  button {
    background-color: none;
    outline: none;
    border: none;
    width: 60px;
    height: 60px;
    margin: 0 2px;
    text-transform: uppercase;
    font-size: 12px;
    padding: 0;
    background-color: #111;
    color: #fff;
    overflow: hidden;
    // &:nth-child(1).on {
    //   background-color: nth($colors, 1);
    //   @include longShadow(darken(nth($colors, 1), 10), 30);
    // }
    // &:nth-child(2).on {
    //   background-color: nth($colors, 2);
    //   @include longShadow(darken(nth($colors, 2), 10), 30);
    // }
    // &:nth-child(3).on {
    //   background-color: nth($colors, 3);
    //   @include longShadow(darken(nth($colors, 3), 10), 30);
    // }
    // &:nth-child(4).on {
    //   background-color: nth($colors, 4);
    //   @include longShadow(darken(nth($colors, 4), 10), 30);
    // }
    // &:nth-child(5).on {
    //   background-color: nth($colors, 5);
    //   @include longShadow(darken(nth($colors, 5), 10), 30);
    // }
    // &:nth-child(6).on {
    //   background-color: nth($colors, 6);
    //   @include longShadow(darken(nth($colors, 6), 10), 30);
    // }
  }

  @each $color in $colors {
    $index: index($colors, $color);
    button:nth-child(#{$index}).on {
      background-color: $color;
      @include longShadow(darken($color, 10), 30);
    }
  }
  // @for $i from 1 through length($colors) {
  //   button:nth-child(#{$i}).on {
  //     background-color: nth($colors, $i);
  //     @include longShadow(darken(nth($colors, $i), 10), 30);
  //   }
  // }
}
